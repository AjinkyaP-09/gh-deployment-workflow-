# Simple workflow to deploy a static website to GitHub Pages
name: Deploy Sendmate Website to GitHub Pages

# Run this workflow every time a new commit is pushed to the `main` branch
# that includes changes to the index.html file.
on:
  push:
    branches: [ "main" ]
    paths:
      - 'index.html'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2: Configures GitHub Pages, enabling it if not already enabled
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          # This will automatically enable GitHub Pages if it's not already
          enablement: true

      # Step 3: Uploads your site files as an artifact that GitHub can use for deployment
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload the entire repository (since your index.html is in the root)
          path: '.'

      # Step 4: Deploys the uploaded artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
